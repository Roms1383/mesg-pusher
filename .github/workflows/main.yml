name: build
on: [push]
env:
  NPM: '6.12.0'
  YARN: '1.19.1'
  CI: true
jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v1
      - name: Read .nvmrc
        run: echo "##[set-output name=NVMRC;]$(cat .nvmrc)"
        id: nvm
      - name: Use NVM
        uses: dcodeIO/setup-node-nvm@master
        with:
          node-version: "${{ steps.nvm.outputs.NVMRC }}"
      - name: Use NPM and Yarn
        run: |
          npm i -g npm@$NPM
          curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version $YARN
          export PATH="$HOME/.yarn/bin:$PATH"
      - name: Lint files
        run: |
          yarn
          yarn lint
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v1
      - name: Read .nvmrc
        run: echo "##[set-output name=NVMRC;]$(cat .nvmrc)"
        id: nvm
      - name: Use NVM
        uses: dcodeIO/setup-node-nvm@master
        with:
          node-version: "${{ steps.nvm.outputs.NVMRC }}"
      - name: Use NPM and Yarn
        run: |
          npm i -g npm@$NPM
          curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version $YARN
          export PATH="$HOME/.yarn/bin:$PATH"
      - name: Unit test
        run: |
          echo "Unit tests"
          npm install -g mesg-cli codacy-coverage
          yarn
          yarn spec --coverage
          yarn coverage
          echo "Integration test"
          docker swarm init
          yarn test
        env:
          MESG_ACCOUNT: ${{ secrets.MESG_ACCOUNT }}
          MESG_PASSPHRASE: ${{ secrets.MESG_PASSPHRASE }}
          PUSHER_APP_ID: ${{ secrets.PUSHER_APP_ID }}
          PUSHER_APP_KEY: ${{ secrets.PUSHER_APP_KEY }}
          PUSHER_APP_SECRET: ${{ secrets.PUSHER_APP_SECRET }}
          PUSHER_CLUSTER: ${{ secrets.PUSHER_CLUSTER }}
          CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}
  release:
    name: Release
    if: github.ref == 'refs/heads/master'
    needs: [lint, test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v1
      - name: Read .nvmrc
        run: echo "##[set-output name=NVMRC;]$(cat .nvmrc)"
        id: nvm
      - name: Use NVM
        uses: dcodeIO/setup-node-nvm@master
        with:
          node-version: "${{ steps.nvm.outputs.NVMRC }}"
      - name: Use NPM and Yarn
        run: |
          npm i -g npm@$NPM
          curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version $YARN
          export PATH="$HOME/.yarn/bin:$PATH"
      - name: Publish release
        run: |
          yarn
          yarn release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
