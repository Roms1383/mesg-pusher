name: build
on: [push]
env:
  NPM: '6.12.0'
  YARN: '1.19.1'
  CI: true
jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v1
      - name: Use NVM
        uses: dcodeIO/setup-node-nvm@master
        with:
          node-version: '10.17.0'
      - name: Use NPM and Yarn
        run: |
          npm i -g npm@$NPM
          curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version $YARN
          export PATH="$HOME/.yarn/bin:$PATH"
      - name: Lint files
        run: |
          yarn
          yarn lint
  test:
    name: Unit test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v1
      - name: Use NVM
        uses: dcodeIO/setup-node-nvm@master
        with:
          node-version: '10.17.0'
      - name: Use NPM and Yarn
        run: |
          npm i -g npm@$NPM
          curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version $YARN
          export PATH="$HOME/.yarn/bin:$PATH"
      - name: Launch MESG service
        run: |
          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
          [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
          source $HOME/.bashrc
          docker swarm init
          npm install -g mesg-cli
          mesg-cli daemon:start
          mesg-cli account:create $MESG_ACCOUNT --passphrase $MESG_PASSPHRASE
          echo "##[set-output name=MESG_HASH;]$(mesg-cli service:create "$(mesg-cli service:compile)" --account $MESG_ACCOUNT --passphrase $MESG_PASSPHRASE)"
          mesg-cli service:start ${{ steps.nvm.outputs.MESG_HASH }} --env PUSHER_APP_ID=$PUSHER_APP_ID --env PUSHER_APP_KEY=$PUSHER_APP_KEY --env PUSHER_APP_SECRET=$PUSHER_APP_SECRET --env PUSHER_CLUSTER=$PUSHER_CLUSTER
        env:
          MESG_ACCOUNT: ${{ secrets.MESG_ACCOUNT }}
          MESG_PASSPHRASE: ${{ secrets.MESG_PASSPHRASE }}
          PUSHER_APP_ID: ${{ secrets.PUSHER_APP_ID }}
          PUSHER_APP_KEY: ${{ secrets.PUSHER_APP_KEY }}
          PUSHER_APP_SECRET: ${{ secrets.PUSHER_APP_SECRET }}
          PUSHER_CLUSTER: ${{ secrets.PUSHER_CLUSTER }}
        id: mesg
      - name: Unit test
        run: |
          yarn
          yarn test
        env:
          PUSHER_APP_ID: ${{ secrets.PUSHER_APP_ID }}
          PUSHER_APP_KEY: ${{ secrets.PUSHER_APP_KEY }}
          PUSHER_APP_SECRET: ${{ secrets.PUSHER_APP_SECRET }}
          PUSHER_CLUSTER: ${{ secrets.PUSHER_CLUSTER }}
      - name: Shutdown MESG service
        run: |
          mesg-cli service:stop ${{ steps.nvm.outputs.MESG_HASH }}
          mesg-cli daemon:stop
  release:
    name: Semantic release
    if: github.ref == 'refs/heads/master'
    needs: [lint, test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v1
      - name: Use NVM
        uses: dcodeIO/setup-node-nvm@master
        with:
          node-version: '10.17.0'
      - name: Use NPM and Yarn
        run: |
          npm i -g npm@$NPM
          curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version $YARN
          export PATH="$HOME/.yarn/bin:$PATH"
      - name: Publish release
        run: |
          yarn
          yarn release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}